# Archivo de GitHub Actions: jekyll-gh-pages.yml
# Workflow personalizado para construir y desplegar un sitio Jekyll en GitHub Pages

name: Desplegar Jekyll en GitHub Pages

# Ejecutar este workflow cuando haya un push a la rama 'main' o un disparo manual (workflow_dispatch)
on:
  push:
    branches:
      - "Inicio"  # Cambia 'main' por tu rama preferida, por ejemplo, 'Inicio'
  workflow_dispatch:

# Configurar los permisos para permitir escribir en GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Limitar el número de ejecuciones concurrentes
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Trabajo de construcción del sitio Jekyll
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # Paso 2: Configurar GitHub Pages
      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v5

      # Paso 3: Instalar dependencias (Ruby y Bundler para Jekyll)
      - name: Instalar Ruby y Bundler
        run: |
          sudo apt-get update
          sudo apt-get install ruby-full
          gem install bundler
          bundle install

      # Paso 4: Construir el sitio con Jekyll
      - name: Construir el sitio Jekyll
        run: |
          bundle exec jekyll build --config _config.yml  # Usa tu configuración personalizada de Jekyll
        env:
          JEKYLL_ENV: production  # Establecer entorno de producción para optimizaciones

      # Paso 5: Subir el artefacto generado (el sitio estático)
      - name: Subir artefacto de la página
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site  # Ruta donde Jekyll genera el sitio web

  # Trabajo de despliegue del sitio en GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # Desplegar solo si el trabajo 'build' es exitoso

    steps:
      # Paso 6: Desplegar en GitHub Pages
      - name: Desplegar el sitio en GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Paso 7: Mensaje de éxito en la consola
      - name: Confirmar despliegue exitoso
        run: echo "El sitio ha sido desplegado exitosamente en ${{ steps.deployment.outputs.page_url }}"
